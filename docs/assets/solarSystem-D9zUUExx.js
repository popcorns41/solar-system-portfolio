import{C as mt,V as T,M as ie,T as te,Q as Ue,S as ze,a as p,R as gt,P as _t,b as vt,c as ee,O as wt,B as Ce,F as Fe,d as F,U as ge,W as z,H as N,N as Pe,e as bt,f as j,A as Qe,g as Tt,h as xt,D as Ee,i as Mt,j as yt,k as St,l as Ct,m as Pt,n as Et,o as Dt,p as Bt,q as Rt,r as Ot,s as At,t as pe,u as ue,v as kt,w as Lt,x as Ut,y as je,G as Ie,E as Ne,L as Ye,z as He,I as zt,J as ye,K as Ft}from"./index-CiXatEjn.js";const Ve={type:"change"},De={type:"start"},Ke={type:"end"},me=new gt,We=new _t,jt=Math.cos(70*vt.DEG2RAD),M=new T,B=2*Math.PI,g={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},Se=1e-6;class It extends mt{constructor(e,t=null){super(e,t),this.state=g.NONE,this.target=new T,this.cursor=new T,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.keyRotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:ie.ROTATE,MIDDLE:ie.DOLLY,RIGHT:ie.PAN},this.touches={ONE:te.ROTATE,TWO:te.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new T,this._lastQuaternion=new Ue,this._lastTargetPosition=new T,this._quat=new Ue().setFromUnitVectors(e.up,new T(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new ze,this._sphericalDelta=new ze,this._scale=1,this._panOffset=new T,this._rotateStart=new p,this._rotateEnd=new p,this._rotateDelta=new p,this._panStart=new p,this._panEnd=new p,this._panDelta=new p,this._dollyStart=new p,this._dollyEnd=new p,this._dollyDelta=new p,this._dollyDirection=new T,this._mouse=new p,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=Yt.bind(this),this._onPointerDown=Nt.bind(this),this._onPointerUp=Ht.bind(this),this._onContextMenu=Gt.bind(this),this._onMouseWheel=Zt.bind(this),this._onKeyDown=Qt.bind(this),this._onTouchStart=Kt.bind(this),this._onTouchMove=Xt.bind(this),this._onMouseDown=Vt.bind(this),this._onMouseMove=Wt.bind(this),this._interceptControlDown=qt.bind(this),this._interceptControlUp=$t.bind(this),this.domElement!==null&&this.connect(this.domElement),this.update()}connect(e){super.connect(e),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents(),this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(e){e.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=e}stopListenToKeyEvents(){this._domElementKeyEvents!==null&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(Ve),this.update(),this.state=g.NONE}update(e=null){const t=this.object.position;M.copy(t).sub(this.target),M.applyQuaternion(this._quat),this._spherical.setFromVector3(M),this.autoRotate&&this.state===g.NONE&&this._rotateLeft(this._getAutoRotationAngle(e)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let i=this.minAzimuthAngle,a=this.maxAzimuthAngle;isFinite(i)&&isFinite(a)&&(i<-Math.PI?i+=B:i>Math.PI&&(i-=B),a<-Math.PI?a+=B:a>Math.PI&&(a-=B),i<=a?this._spherical.theta=Math.max(i,Math.min(a,this._spherical.theta)):this._spherical.theta=this._spherical.theta>(i+a)/2?Math.max(i,this._spherical.theta):Math.min(a,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),this.enableDamping===!0?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let s=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{const l=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),s=l!=this._spherical.radius}if(M.setFromSpherical(this._spherical),M.applyQuaternion(this._quatInverse),t.copy(this.target).add(M),this.object.lookAt(this.target),this.enableDamping===!0?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let l=null;if(this.object.isPerspectiveCamera){const m=M.length();l=this._clampDistance(m*this._scale);const f=m-l;this.object.position.addScaledVector(this._dollyDirection,f),this.object.updateMatrixWorld(),s=!!f}else if(this.object.isOrthographicCamera){const m=new T(this._mouse.x,this._mouse.y,0);m.unproject(this.object);const f=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),s=f!==this.object.zoom;const b=new T(this._mouse.x,this._mouse.y,0);b.unproject(this.object),this.object.position.sub(b).add(m),this.object.updateMatrixWorld(),l=M.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),this.zoomToCursor=!1;l!==null&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(l).add(this.object.position):(me.origin.copy(this.object.position),me.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(me.direction))<jt?this.object.lookAt(this.target):(We.setFromNormalAndCoplanarPoint(this.object.up,this.target),me.intersectPlane(We,this.target))))}else if(this.object.isOrthographicCamera){const l=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),l!==this.object.zoom&&(this.object.updateProjectionMatrix(),s=!0)}return this._scale=1,this._performCursorZoom=!1,s||this._lastPosition.distanceToSquared(this.object.position)>Se||8*(1-this._lastQuaternion.dot(this.object.quaternion))>Se||this._lastTargetPosition.distanceToSquared(this.target)>Se?(this.dispatchEvent(Ve),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0):!1}_getAutoRotationAngle(e){return e!==null?B/60*this.autoRotateSpeed*e:B/60/60*this.autoRotateSpeed}_getZoomScale(e){const t=Math.abs(e*.01);return Math.pow(.95,this.zoomSpeed*t)}_rotateLeft(e){this._sphericalDelta.theta-=e}_rotateUp(e){this._sphericalDelta.phi-=e}_panLeft(e,t){M.setFromMatrixColumn(t,0),M.multiplyScalar(-e),this._panOffset.add(M)}_panUp(e,t){this.screenSpacePanning===!0?M.setFromMatrixColumn(t,1):(M.setFromMatrixColumn(t,0),M.crossVectors(this.object.up,M)),M.multiplyScalar(e),this._panOffset.add(M)}_pan(e,t){const i=this.domElement;if(this.object.isPerspectiveCamera){const a=this.object.position;M.copy(a).sub(this.target);let s=M.length();s*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*e*s/i.clientHeight,this.object.matrix),this._panUp(2*t*s/i.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(e*(this.object.right-this.object.left)/this.object.zoom/i.clientWidth,this.object.matrix),this._panUp(t*(this.object.top-this.object.bottom)/this.object.zoom/i.clientHeight,this.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),this.enablePan=!1)}_dollyOut(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_dollyIn(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_updateZoomParameters(e,t){if(!this.zoomToCursor)return;this._performCursorZoom=!0;const i=this.domElement.getBoundingClientRect(),a=e-i.left,s=t-i.top,l=i.width,m=i.height;this._mouse.x=a/l*2-1,this._mouse.y=-(s/m)*2+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(e){return Math.max(this.minDistance,Math.min(this.maxDistance,e))}_handleMouseDownRotate(e){this._rotateStart.set(e.clientX,e.clientY)}_handleMouseDownDolly(e){this._updateZoomParameters(e.clientX,e.clientX),this._dollyStart.set(e.clientX,e.clientY)}_handleMouseDownPan(e){this._panStart.set(e.clientX,e.clientY)}_handleMouseMoveRotate(e){this._rotateEnd.set(e.clientX,e.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(B*this._rotateDelta.x/t.clientHeight),this._rotateUp(B*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(e){this._dollyEnd.set(e.clientX,e.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(e){this._panEnd.set(e.clientX,e.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(e){this._updateZoomParameters(e.clientX,e.clientY),e.deltaY<0?this._dollyIn(this._getZoomScale(e.deltaY)):e.deltaY>0&&this._dollyOut(this._getZoomScale(e.deltaY)),this.update()}_handleKeyDown(e){let t=!1;switch(e.code){case this.keys.UP:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(B*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,this.keyPanSpeed),t=!0;break;case this.keys.BOTTOM:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(-B*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,-this.keyPanSpeed),t=!0;break;case this.keys.LEFT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(B*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(this.keyPanSpeed,0),t=!0;break;case this.keys.RIGHT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(-B*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(-this.keyPanSpeed,0),t=!0;break}t&&(e.preventDefault(),this.update())}_handleTouchStartRotate(e){if(this._pointers.length===1)this._rotateStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),i=.5*(e.pageX+t.x),a=.5*(e.pageY+t.y);this._rotateStart.set(i,a)}}_handleTouchStartPan(e){if(this._pointers.length===1)this._panStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),i=.5*(e.pageX+t.x),a=.5*(e.pageY+t.y);this._panStart.set(i,a)}}_handleTouchStartDolly(e){const t=this._getSecondPointerPosition(e),i=e.pageX-t.x,a=e.pageY-t.y,s=Math.sqrt(i*i+a*a);this._dollyStart.set(0,s)}_handleTouchStartDollyPan(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enablePan&&this._handleTouchStartPan(e)}_handleTouchStartDollyRotate(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enableRotate&&this._handleTouchStartRotate(e)}_handleTouchMoveRotate(e){if(this._pointers.length==1)this._rotateEnd.set(e.pageX,e.pageY);else{const i=this._getSecondPointerPosition(e),a=.5*(e.pageX+i.x),s=.5*(e.pageY+i.y);this._rotateEnd.set(a,s)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(B*this._rotateDelta.x/t.clientHeight),this._rotateUp(B*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(e){if(this._pointers.length===1)this._panEnd.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),i=.5*(e.pageX+t.x),a=.5*(e.pageY+t.y);this._panEnd.set(i,a)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(e){const t=this._getSecondPointerPosition(e),i=e.pageX-t.x,a=e.pageY-t.y,s=Math.sqrt(i*i+a*a);this._dollyEnd.set(0,s),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);const l=(e.pageX+t.x)*.5,m=(e.pageY+t.y)*.5;this._updateZoomParameters(l,m)}_handleTouchMoveDollyPan(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enablePan&&this._handleTouchMovePan(e)}_handleTouchMoveDollyRotate(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enableRotate&&this._handleTouchMoveRotate(e)}_addPointer(e){this._pointers.push(e.pointerId)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId){this._pointers.splice(t,1);return}}_isTrackingPointer(e){for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId)return!0;return!1}_trackPointer(e){let t=this._pointerPositions[e.pointerId];t===void 0&&(t=new p,this._pointerPositions[e.pointerId]=t),t.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){const t=e.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[t]}_customWheelEvent(e){const t=e.deltaMode,i={clientX:e.clientX,clientY:e.clientY,deltaY:e.deltaY};switch(t){case 1:i.deltaY*=16;break;case 2:i.deltaY*=100;break}return e.ctrlKey&&!this._controlActive&&(i.deltaY*=10),i}}function Nt(n){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(n.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),!this._isTrackingPointer(n)&&(this._addPointer(n),n.pointerType==="touch"?this._onTouchStart(n):this._onMouseDown(n)))}function Yt(n){this.enabled!==!1&&(n.pointerType==="touch"?this._onTouchMove(n):this._onMouseMove(n))}function Ht(n){switch(this._removePointer(n),this._pointers.length){case 0:this.domElement.releasePointerCapture(n.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(Ke),this.state=g.NONE;break;case 1:const e=this._pointers[0],t=this._pointerPositions[e];this._onTouchStart({pointerId:e,pageX:t.x,pageY:t.y});break}}function Vt(n){let e;switch(n.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case ie.DOLLY:if(this.enableZoom===!1)return;this._handleMouseDownDolly(n),this.state=g.DOLLY;break;case ie.ROTATE:if(n.ctrlKey||n.metaKey||n.shiftKey){if(this.enablePan===!1)return;this._handleMouseDownPan(n),this.state=g.PAN}else{if(this.enableRotate===!1)return;this._handleMouseDownRotate(n),this.state=g.ROTATE}break;case ie.PAN:if(n.ctrlKey||n.metaKey||n.shiftKey){if(this.enableRotate===!1)return;this._handleMouseDownRotate(n),this.state=g.ROTATE}else{if(this.enablePan===!1)return;this._handleMouseDownPan(n),this.state=g.PAN}break;default:this.state=g.NONE}this.state!==g.NONE&&this.dispatchEvent(De)}function Wt(n){switch(this.state){case g.ROTATE:if(this.enableRotate===!1)return;this._handleMouseMoveRotate(n);break;case g.DOLLY:if(this.enableZoom===!1)return;this._handleMouseMoveDolly(n);break;case g.PAN:if(this.enablePan===!1)return;this._handleMouseMovePan(n);break}}function Zt(n){this.enabled===!1||this.enableZoom===!1||this.state!==g.NONE||(n.preventDefault(),this.dispatchEvent(De),this._handleMouseWheel(this._customWheelEvent(n)),this.dispatchEvent(Ke))}function Qt(n){this.enabled!==!1&&this._handleKeyDown(n)}function Kt(n){switch(this._trackPointer(n),this._pointers.length){case 1:switch(this.touches.ONE){case te.ROTATE:if(this.enableRotate===!1)return;this._handleTouchStartRotate(n),this.state=g.TOUCH_ROTATE;break;case te.PAN:if(this.enablePan===!1)return;this._handleTouchStartPan(n),this.state=g.TOUCH_PAN;break;default:this.state=g.NONE}break;case 2:switch(this.touches.TWO){case te.DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchStartDollyPan(n),this.state=g.TOUCH_DOLLY_PAN;break;case te.DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchStartDollyRotate(n),this.state=g.TOUCH_DOLLY_ROTATE;break;default:this.state=g.NONE}break;default:this.state=g.NONE}this.state!==g.NONE&&this.dispatchEvent(De)}function Xt(n){switch(this._trackPointer(n),this.state){case g.TOUCH_ROTATE:if(this.enableRotate===!1)return;this._handleTouchMoveRotate(n),this.update();break;case g.TOUCH_PAN:if(this.enablePan===!1)return;this._handleTouchMovePan(n),this.update();break;case g.TOUCH_DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchMoveDollyPan(n),this.update();break;case g.TOUCH_DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchMoveDollyRotate(n),this.update();break;default:this.state=g.NONE}}function Gt(n){this.enabled!==!1&&n.preventDefault()}function qt(n){n.key==="Control"&&(this._controlActive=!0,this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}function $t(n){n.key==="Control"&&(this._controlActive=!1,this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}const ce={name:"CopyShader",uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform float opacity;

		uniform sampler2D tDiffuse;

		varying vec2 vUv;

		void main() {

			vec4 texel = texture2D( tDiffuse, vUv );
			gl_FragColor = opacity * texel;


		}`};class ae{constructor(){this.isPass=!0,this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}dispose(){}}const Jt=new wt(-1,1,1,-1,0,1);class ei extends Ce{constructor(){super(),this.setAttribute("position",new Fe([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new Fe([0,2,0,0,2,0],2))}}const ti=new ei;class Be{constructor(e){this._mesh=new ee(ti,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,Jt)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}}class ii extends ae{constructor(e,t="tDiffuse"){super(),this.textureID=t,this.uniforms=null,this.material=null,e instanceof F?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=ge.clone(e.uniforms),this.material=new F({name:e.name!==void 0?e.name:"unspecified",defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this._fsQuad=new Be(this.material)}render(e,t,i){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=i.texture),this._fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this._fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this._fsQuad.render(e))}dispose(){this.material.dispose(),this._fsQuad.dispose()}}class Ze extends ae{constructor(e,t){super(),this.scene=e,this.camera=t,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(e,t,i){const a=e.getContext(),s=e.state;s.buffers.color.setMask(!1),s.buffers.depth.setMask(!1),s.buffers.color.setLocked(!0),s.buffers.depth.setLocked(!0);let l,m;this.inverse?(l=0,m=1):(l=1,m=0),s.buffers.stencil.setTest(!0),s.buffers.stencil.setOp(a.REPLACE,a.REPLACE,a.REPLACE),s.buffers.stencil.setFunc(a.ALWAYS,l,4294967295),s.buffers.stencil.setClear(m),s.buffers.stencil.setLocked(!0),e.setRenderTarget(i),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),s.buffers.color.setLocked(!1),s.buffers.depth.setLocked(!1),s.buffers.color.setMask(!0),s.buffers.depth.setMask(!0),s.buffers.stencil.setLocked(!1),s.buffers.stencil.setFunc(a.EQUAL,1,4294967295),s.buffers.stencil.setOp(a.KEEP,a.KEEP,a.KEEP),s.buffers.stencil.setLocked(!0)}}class si extends ae{constructor(){super(),this.needsSwap=!1}render(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}}class ai{constructor(e,t){if(this.renderer=e,this._pixelRatio=e.getPixelRatio(),t===void 0){const i=e.getSize(new p);this._width=i.width,this._height=i.height,t=new z(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:N}),t.texture.name="EffectComposer.rt1"}else this._width=t.width,this._height=t.height;this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],this.copyPass=new ii(ce),this.copyPass.material.blending=Pe,this.clock=new bt}swapBuffers(){const e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}addPass(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(e){const t=this.passes.indexOf(e);t!==-1&&this.passes.splice(t,1)}isLastEnabledPass(e){for(let t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0}render(e){e===void 0&&(e=this.clock.getDelta());const t=this.renderer.getRenderTarget();let i=!1;for(let a=0,s=this.passes.length;a<s;a++){const l=this.passes[a];if(l.enabled!==!1){if(l.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(a),l.render(this.renderer,this.writeBuffer,this.readBuffer,e,i),l.needsSwap){if(i){const m=this.renderer.getContext(),f=this.renderer.state.buffers.stencil;f.setFunc(m.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),f.setFunc(m.EQUAL,1,4294967295)}this.swapBuffers()}Ze!==void 0&&(l instanceof Ze?i=!0:l instanceof si&&(i=!1))}}this.renderer.setRenderTarget(t)}reset(e){if(e===void 0){const t=this.renderer.getSize(new p);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,e=this.renderTarget1.clone(),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(e,t){this._width=e,this._height=t;const i=this._width*this._pixelRatio,a=this._height*this._pixelRatio;this.renderTarget1.setSize(i,a),this.renderTarget2.setSize(i,a);for(let s=0;s<this.passes.length;s++)this.passes[s].setSize(i,a)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.copyPass.dispose()}}const ri={uniforms:{tDiffuse:{value:null},luminosityThreshold:{value:1},smoothWidth:{value:1},defaultColor:{value:new j(0)},defaultOpacity:{value:0}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;

			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform sampler2D tDiffuse;
		uniform vec3 defaultColor;
		uniform float defaultOpacity;
		uniform float luminosityThreshold;
		uniform float smoothWidth;

		varying vec2 vUv;

		void main() {

			vec4 texel = texture2D( tDiffuse, vUv );

			float v = luminance( texel.xyz );

			vec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );

			float alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );

			gl_FragColor = mix( outputColor, texel, alpha );

		}`};class se extends ae{constructor(e,t=1,i,a){super(),this.strength=t,this.radius=i,this.threshold=a,this.resolution=e!==void 0?new p(e.x,e.y):new p(256,256),this.clearColor=new j(0,0,0),this.needsSwap=!1,this.renderTargetsHorizontal=[],this.renderTargetsVertical=[],this.nMips=5;let s=Math.round(this.resolution.x/2),l=Math.round(this.resolution.y/2);this.renderTargetBright=new z(s,l,{type:N}),this.renderTargetBright.texture.name="UnrealBloomPass.bright",this.renderTargetBright.texture.generateMipmaps=!1;for(let y=0;y<this.nMips;y++){const Z=new z(s,l,{type:N});Z.texture.name="UnrealBloomPass.h"+y,Z.texture.generateMipmaps=!1,this.renderTargetsHorizontal.push(Z);const Q=new z(s,l,{type:N});Q.texture.name="UnrealBloomPass.v"+y,Q.texture.generateMipmaps=!1,this.renderTargetsVertical.push(Q),s=Math.round(s/2),l=Math.round(l/2)}const m=ri;this.highPassUniforms=ge.clone(m.uniforms),this.highPassUniforms.luminosityThreshold.value=a,this.highPassUniforms.smoothWidth.value=.01,this.materialHighPassFilter=new F({uniforms:this.highPassUniforms,vertexShader:m.vertexShader,fragmentShader:m.fragmentShader}),this.separableBlurMaterials=[];const f=[3,5,7,9,11];s=Math.round(this.resolution.x/2),l=Math.round(this.resolution.y/2);for(let y=0;y<this.nMips;y++)this.separableBlurMaterials.push(this._getSeparableBlurMaterial(f[y])),this.separableBlurMaterials[y].uniforms.invSize.value=new p(1/s,1/l),s=Math.round(s/2),l=Math.round(l/2);this.compositeMaterial=this._getCompositeMaterial(this.nMips),this.compositeMaterial.uniforms.blurTexture1.value=this.renderTargetsVertical[0].texture,this.compositeMaterial.uniforms.blurTexture2.value=this.renderTargetsVertical[1].texture,this.compositeMaterial.uniforms.blurTexture3.value=this.renderTargetsVertical[2].texture,this.compositeMaterial.uniforms.blurTexture4.value=this.renderTargetsVertical[3].texture,this.compositeMaterial.uniforms.blurTexture5.value=this.renderTargetsVertical[4].texture,this.compositeMaterial.uniforms.bloomStrength.value=t,this.compositeMaterial.uniforms.bloomRadius.value=.1;const b=[1,.8,.6,.4,.2];this.compositeMaterial.uniforms.bloomFactors.value=b,this.bloomTintColors=[new T(1,1,1),new T(1,1,1),new T(1,1,1),new T(1,1,1),new T(1,1,1)],this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,this.copyUniforms=ge.clone(ce.uniforms),this.blendMaterial=new F({uniforms:this.copyUniforms,vertexShader:ce.vertexShader,fragmentShader:ce.fragmentShader,blending:Qe,depthTest:!1,depthWrite:!1,transparent:!0}),this._oldClearColor=new j,this._oldClearAlpha=1,this._basic=new Tt,this._fsQuad=new Be(null)}dispose(){for(let e=0;e<this.renderTargetsHorizontal.length;e++)this.renderTargetsHorizontal[e].dispose();for(let e=0;e<this.renderTargetsVertical.length;e++)this.renderTargetsVertical[e].dispose();this.renderTargetBright.dispose();for(let e=0;e<this.separableBlurMaterials.length;e++)this.separableBlurMaterials[e].dispose();this.compositeMaterial.dispose(),this.blendMaterial.dispose(),this._basic.dispose(),this._fsQuad.dispose()}setSize(e,t){let i=Math.round(e/2),a=Math.round(t/2);this.renderTargetBright.setSize(i,a);for(let s=0;s<this.nMips;s++)this.renderTargetsHorizontal[s].setSize(i,a),this.renderTargetsVertical[s].setSize(i,a),this.separableBlurMaterials[s].uniforms.invSize.value=new p(1/i,1/a),i=Math.round(i/2),a=Math.round(a/2)}render(e,t,i,a,s){e.getClearColor(this._oldClearColor),this._oldClearAlpha=e.getClearAlpha();const l=e.autoClear;e.autoClear=!1,e.setClearColor(this.clearColor,0),s&&e.state.buffers.stencil.setTest(!1),this.renderToScreen&&(this._fsQuad.material=this._basic,this._basic.map=i.texture,e.setRenderTarget(null),e.clear(),this._fsQuad.render(e)),this.highPassUniforms.tDiffuse.value=i.texture,this.highPassUniforms.luminosityThreshold.value=this.threshold,this._fsQuad.material=this.materialHighPassFilter,e.setRenderTarget(this.renderTargetBright),e.clear(),this._fsQuad.render(e);let m=this.renderTargetBright;for(let f=0;f<this.nMips;f++)this._fsQuad.material=this.separableBlurMaterials[f],this.separableBlurMaterials[f].uniforms.colorTexture.value=m.texture,this.separableBlurMaterials[f].uniforms.direction.value=se.BlurDirectionX,e.setRenderTarget(this.renderTargetsHorizontal[f]),e.clear(),this._fsQuad.render(e),this.separableBlurMaterials[f].uniforms.colorTexture.value=this.renderTargetsHorizontal[f].texture,this.separableBlurMaterials[f].uniforms.direction.value=se.BlurDirectionY,e.setRenderTarget(this.renderTargetsVertical[f]),e.clear(),this._fsQuad.render(e),m=this.renderTargetsVertical[f];this._fsQuad.material=this.compositeMaterial,this.compositeMaterial.uniforms.bloomStrength.value=this.strength,this.compositeMaterial.uniforms.bloomRadius.value=this.radius,this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,e.setRenderTarget(this.renderTargetsHorizontal[0]),e.clear(),this._fsQuad.render(e),this._fsQuad.material=this.blendMaterial,this.copyUniforms.tDiffuse.value=this.renderTargetsHorizontal[0].texture,s&&e.state.buffers.stencil.setTest(!0),this.renderToScreen?(e.setRenderTarget(null),this._fsQuad.render(e)):(e.setRenderTarget(i),this._fsQuad.render(e)),e.setClearColor(this._oldClearColor,this._oldClearAlpha),e.autoClear=l}_getSeparableBlurMaterial(e){const t=[];for(let i=0;i<e;i++)t.push(.39894*Math.exp(-.5*i*i/(e*e))/e);return new F({defines:{KERNEL_RADIUS:e},uniforms:{colorTexture:{value:null},invSize:{value:new p(.5,.5)},direction:{value:new p(.5,.5)},gaussianCoefficients:{value:t}},vertexShader:`varying vec2 vUv;
				void main() {
					vUv = uv;
					gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
				}`,fragmentShader:`#include <common>
				varying vec2 vUv;
				uniform sampler2D colorTexture;
				uniform vec2 invSize;
				uniform vec2 direction;
				uniform float gaussianCoefficients[KERNEL_RADIUS];

				void main() {
					float weightSum = gaussianCoefficients[0];
					vec3 diffuseSum = texture2D( colorTexture, vUv ).rgb * weightSum;
					for( int i = 1; i < KERNEL_RADIUS; i ++ ) {
						float x = float(i);
						float w = gaussianCoefficients[i];
						vec2 uvOffset = direction * invSize * x;
						vec3 sample1 = texture2D( colorTexture, vUv + uvOffset ).rgb;
						vec3 sample2 = texture2D( colorTexture, vUv - uvOffset ).rgb;
						diffuseSum += (sample1 + sample2) * w;
						weightSum += 2.0 * w;
					}
					gl_FragColor = vec4(diffuseSum/weightSum, 1.0);
				}`})}_getCompositeMaterial(e){return new F({defines:{NUM_MIPS:e},uniforms:{blurTexture1:{value:null},blurTexture2:{value:null},blurTexture3:{value:null},blurTexture4:{value:null},blurTexture5:{value:null},bloomStrength:{value:1},bloomFactors:{value:null},bloomTintColors:{value:null},bloomRadius:{value:0}},vertexShader:`varying vec2 vUv;
				void main() {
					vUv = uv;
					gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
				}`,fragmentShader:`varying vec2 vUv;
				uniform sampler2D blurTexture1;
				uniform sampler2D blurTexture2;
				uniform sampler2D blurTexture3;
				uniform sampler2D blurTexture4;
				uniform sampler2D blurTexture5;
				uniform float bloomStrength;
				uniform float bloomRadius;
				uniform float bloomFactors[NUM_MIPS];
				uniform vec3 bloomTintColors[NUM_MIPS];

				float lerpBloomFactor(const in float factor) {
					float mirrorFactor = 1.2 - factor;
					return mix(factor, mirrorFactor, bloomRadius);
				}

				void main() {
					gl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) +
						lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) +
						lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) +
						lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) +
						lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );
				}`})}}se.BlurDirectionX=new p(1,0);se.BlurDirectionY=new p(0,1);class oi extends ae{constructor(e,t,i=null,a=null,s=null){super(),this.scene=e,this.camera=t,this.overrideMaterial=i,this.clearColor=a,this.clearAlpha=s,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new j}render(e,t,i){const a=e.autoClear;e.autoClear=!1;let s,l;this.overrideMaterial!==null&&(l=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor!==null&&(e.getClearColor(this._oldClearColor),e.setClearColor(this.clearColor,e.getClearAlpha())),this.clearAlpha!==null&&(s=e.getClearAlpha(),e.setClearAlpha(this.clearAlpha)),this.clearDepth==!0&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:i),this.clear===!0&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor!==null&&e.setClearColor(this._oldClearColor),this.clearAlpha!==null&&e.setClearAlpha(s),this.overrideMaterial!==null&&(this.scene.overrideMaterial=l),e.autoClear=a}}class W extends ae{constructor(e,t,i,a){super(),this.renderScene=t,this.renderCamera=i,this.selectedObjects=a!==void 0?a:[],this.visibleEdgeColor=new j(1,1,1),this.hiddenEdgeColor=new j(.1,.04,.02),this.edgeGlow=0,this.usePatternTexture=!1,this.patternTexture=null,this.edgeThickness=1,this.edgeStrength=3,this.downSampleRatio=2,this.pulsePeriod=0,this._visibilityCache=new Map,this._selectionCache=new Set,this.resolution=e!==void 0?new p(e.x,e.y):new p(256,256);const s=Math.round(this.resolution.x/this.downSampleRatio),l=Math.round(this.resolution.y/this.downSampleRatio);this.renderTargetMaskBuffer=new z(this.resolution.x,this.resolution.y),this.renderTargetMaskBuffer.texture.name="OutlinePass.mask",this.renderTargetMaskBuffer.texture.generateMipmaps=!1,this.depthMaterial=new xt,this.depthMaterial.side=Ee,this.depthMaterial.depthPacking=Mt,this.depthMaterial.blending=Pe,this.prepareMaskMaterial=this._getPrepareMaskMaterial(),this.prepareMaskMaterial.side=Ee,this.prepareMaskMaterial.fragmentShader=y(this.prepareMaskMaterial.fragmentShader,this.renderCamera),this.renderTargetDepthBuffer=new z(this.resolution.x,this.resolution.y,{type:N}),this.renderTargetDepthBuffer.texture.name="OutlinePass.depth",this.renderTargetDepthBuffer.texture.generateMipmaps=!1,this.renderTargetMaskDownSampleBuffer=new z(s,l,{type:N}),this.renderTargetMaskDownSampleBuffer.texture.name="OutlinePass.depthDownSample",this.renderTargetMaskDownSampleBuffer.texture.generateMipmaps=!1,this.renderTargetBlurBuffer1=new z(s,l,{type:N}),this.renderTargetBlurBuffer1.texture.name="OutlinePass.blur1",this.renderTargetBlurBuffer1.texture.generateMipmaps=!1,this.renderTargetBlurBuffer2=new z(Math.round(s/2),Math.round(l/2),{type:N}),this.renderTargetBlurBuffer2.texture.name="OutlinePass.blur2",this.renderTargetBlurBuffer2.texture.generateMipmaps=!1,this.edgeDetectionMaterial=this._getEdgeDetectionMaterial(),this.renderTargetEdgeBuffer1=new z(s,l,{type:N}),this.renderTargetEdgeBuffer1.texture.name="OutlinePass.edge1",this.renderTargetEdgeBuffer1.texture.generateMipmaps=!1,this.renderTargetEdgeBuffer2=new z(Math.round(s/2),Math.round(l/2),{type:N}),this.renderTargetEdgeBuffer2.texture.name="OutlinePass.edge2",this.renderTargetEdgeBuffer2.texture.generateMipmaps=!1;const m=4,f=4;this.separableBlurMaterial1=this._getSeparableBlurMaterial(m),this.separableBlurMaterial1.uniforms.texSize.value.set(s,l),this.separableBlurMaterial1.uniforms.kernelRadius.value=1,this.separableBlurMaterial2=this._getSeparableBlurMaterial(f),this.separableBlurMaterial2.uniforms.texSize.value.set(Math.round(s/2),Math.round(l/2)),this.separableBlurMaterial2.uniforms.kernelRadius.value=f,this.overlayMaterial=this._getOverlayMaterial();const b=ce;this.copyUniforms=ge.clone(b.uniforms),this.materialCopy=new F({uniforms:this.copyUniforms,vertexShader:b.vertexShader,fragmentShader:b.fragmentShader,blending:Pe,depthTest:!1,depthWrite:!1}),this.enabled=!0,this.needsSwap=!1,this._oldClearColor=new j,this.oldClearAlpha=1,this._fsQuad=new Be(null),this.tempPulseColor1=new j,this.tempPulseColor2=new j,this.textureMatrix=new yt;function y(Z,Q){const P=Q.isPerspectiveCamera?"perspective":"orthographic";return Z.replace(/DEPTH_TO_VIEW_Z/g,P+"DepthToViewZ")}}dispose(){this.renderTargetMaskBuffer.dispose(),this.renderTargetDepthBuffer.dispose(),this.renderTargetMaskDownSampleBuffer.dispose(),this.renderTargetBlurBuffer1.dispose(),this.renderTargetBlurBuffer2.dispose(),this.renderTargetEdgeBuffer1.dispose(),this.renderTargetEdgeBuffer2.dispose(),this.depthMaterial.dispose(),this.prepareMaskMaterial.dispose(),this.edgeDetectionMaterial.dispose(),this.separableBlurMaterial1.dispose(),this.separableBlurMaterial2.dispose(),this.overlayMaterial.dispose(),this.materialCopy.dispose(),this._fsQuad.dispose()}setSize(e,t){this.renderTargetMaskBuffer.setSize(e,t),this.renderTargetDepthBuffer.setSize(e,t);let i=Math.round(e/this.downSampleRatio),a=Math.round(t/this.downSampleRatio);this.renderTargetMaskDownSampleBuffer.setSize(i,a),this.renderTargetBlurBuffer1.setSize(i,a),this.renderTargetEdgeBuffer1.setSize(i,a),this.separableBlurMaterial1.uniforms.texSize.value.set(i,a),i=Math.round(i/2),a=Math.round(a/2),this.renderTargetBlurBuffer2.setSize(i,a),this.renderTargetEdgeBuffer2.setSize(i,a),this.separableBlurMaterial2.uniforms.texSize.value.set(i,a)}render(e,t,i,a,s){if(this.selectedObjects.length>0){e.getClearColor(this._oldClearColor),this.oldClearAlpha=e.getClearAlpha();const l=e.autoClear;e.autoClear=!1,s&&e.state.buffers.stencil.setTest(!1),e.setClearColor(16777215,1),this._updateSelectionCache(),this._changeVisibilityOfSelectedObjects(!1);const m=this.renderScene.background,f=this.renderScene.overrideMaterial;if(this.renderScene.background=null,this.renderScene.overrideMaterial=this.depthMaterial,e.setRenderTarget(this.renderTargetDepthBuffer),e.clear(),e.render(this.renderScene,this.renderCamera),this._changeVisibilityOfSelectedObjects(!0),this._visibilityCache.clear(),this._updateTextureMatrix(),this._changeVisibilityOfNonSelectedObjects(!1),this.renderScene.overrideMaterial=this.prepareMaskMaterial,this.prepareMaskMaterial.uniforms.cameraNearFar.value.set(this.renderCamera.near,this.renderCamera.far),this.prepareMaskMaterial.uniforms.depthTexture.value=this.renderTargetDepthBuffer.texture,this.prepareMaskMaterial.uniforms.textureMatrix.value=this.textureMatrix,e.setRenderTarget(this.renderTargetMaskBuffer),e.clear(),e.render(this.renderScene,this.renderCamera),this._changeVisibilityOfNonSelectedObjects(!0),this._visibilityCache.clear(),this._selectionCache.clear(),this.renderScene.background=m,this.renderScene.overrideMaterial=f,this._fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetMaskBuffer.texture,e.setRenderTarget(this.renderTargetMaskDownSampleBuffer),e.clear(),this._fsQuad.render(e),this.tempPulseColor1.copy(this.visibleEdgeColor),this.tempPulseColor2.copy(this.hiddenEdgeColor),this.pulsePeriod>0){const b=.625+Math.cos(performance.now()*.01/this.pulsePeriod)*.75/2;this.tempPulseColor1.multiplyScalar(b),this.tempPulseColor2.multiplyScalar(b)}this._fsQuad.material=this.edgeDetectionMaterial,this.edgeDetectionMaterial.uniforms.maskTexture.value=this.renderTargetMaskDownSampleBuffer.texture,this.edgeDetectionMaterial.uniforms.texSize.value.set(this.renderTargetMaskDownSampleBuffer.width,this.renderTargetMaskDownSampleBuffer.height),this.edgeDetectionMaterial.uniforms.visibleEdgeColor.value=this.tempPulseColor1,this.edgeDetectionMaterial.uniforms.hiddenEdgeColor.value=this.tempPulseColor2,e.setRenderTarget(this.renderTargetEdgeBuffer1),e.clear(),this._fsQuad.render(e),this._fsQuad.material=this.separableBlurMaterial1,this.separableBlurMaterial1.uniforms.colorTexture.value=this.renderTargetEdgeBuffer1.texture,this.separableBlurMaterial1.uniforms.direction.value=W.BlurDirectionX,this.separableBlurMaterial1.uniforms.kernelRadius.value=this.edgeThickness,e.setRenderTarget(this.renderTargetBlurBuffer1),e.clear(),this._fsQuad.render(e),this.separableBlurMaterial1.uniforms.colorTexture.value=this.renderTargetBlurBuffer1.texture,this.separableBlurMaterial1.uniforms.direction.value=W.BlurDirectionY,e.setRenderTarget(this.renderTargetEdgeBuffer1),e.clear(),this._fsQuad.render(e),this._fsQuad.material=this.separableBlurMaterial2,this.separableBlurMaterial2.uniforms.colorTexture.value=this.renderTargetEdgeBuffer1.texture,this.separableBlurMaterial2.uniforms.direction.value=W.BlurDirectionX,e.setRenderTarget(this.renderTargetBlurBuffer2),e.clear(),this._fsQuad.render(e),this.separableBlurMaterial2.uniforms.colorTexture.value=this.renderTargetBlurBuffer2.texture,this.separableBlurMaterial2.uniforms.direction.value=W.BlurDirectionY,e.setRenderTarget(this.renderTargetEdgeBuffer2),e.clear(),this._fsQuad.render(e),this._fsQuad.material=this.overlayMaterial,this.overlayMaterial.uniforms.maskTexture.value=this.renderTargetMaskBuffer.texture,this.overlayMaterial.uniforms.edgeTexture1.value=this.renderTargetEdgeBuffer1.texture,this.overlayMaterial.uniforms.edgeTexture2.value=this.renderTargetEdgeBuffer2.texture,this.overlayMaterial.uniforms.patternTexture.value=this.patternTexture,this.overlayMaterial.uniforms.edgeStrength.value=this.edgeStrength,this.overlayMaterial.uniforms.edgeGlow.value=this.edgeGlow,this.overlayMaterial.uniforms.usePatternTexture.value=this.usePatternTexture,s&&e.state.buffers.stencil.setTest(!0),e.setRenderTarget(i),this._fsQuad.render(e),e.setClearColor(this._oldClearColor,this.oldClearAlpha),e.autoClear=l}this.renderToScreen&&(this._fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=i.texture,e.setRenderTarget(null),this._fsQuad.render(e))}_updateSelectionCache(){const e=this._selectionCache;function t(i){i.isMesh&&e.add(i)}e.clear();for(let i=0;i<this.selectedObjects.length;i++)this.selectedObjects[i].traverse(t)}_changeVisibilityOfSelectedObjects(e){const t=this._visibilityCache;for(const i of this._selectionCache)e===!0?i.visible=t.get(i):(t.set(i,i.visible),i.visible=e)}_changeVisibilityOfNonSelectedObjects(e){const t=this._visibilityCache,i=this._selectionCache;function a(s){if(s.isMesh||s.isSprite){if(!i.has(s)){const l=s.visible;(e===!1||t.get(s)===!0)&&(s.visible=e),t.set(s,l)}}else(s.isPoints||s.isLine)&&(e===!0?s.visible=t.get(s):(t.set(s,s.visible),s.visible=e))}this.renderScene.traverse(a)}_updateTextureMatrix(){this.textureMatrix.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),this.textureMatrix.multiply(this.renderCamera.projectionMatrix),this.textureMatrix.multiply(this.renderCamera.matrixWorldInverse)}_getPrepareMaskMaterial(){return new F({uniforms:{depthTexture:{value:null},cameraNearFar:{value:new p(.5,.5)},textureMatrix:{value:null}},vertexShader:`#include <batching_pars_vertex>
				#include <morphtarget_pars_vertex>
				#include <skinning_pars_vertex>

				varying vec4 projTexCoord;
				varying vec4 vPosition;
				uniform mat4 textureMatrix;

				void main() {

					#include <batching_vertex>
					#include <skinbase_vertex>
					#include <begin_vertex>
					#include <morphtarget_vertex>
					#include <skinning_vertex>
					#include <project_vertex>

					vPosition = mvPosition;

					vec4 worldPosition = vec4( transformed, 1.0 );

					#ifdef USE_INSTANCING

						worldPosition = instanceMatrix * worldPosition;

					#endif

					worldPosition = modelMatrix * worldPosition;

					projTexCoord = textureMatrix * worldPosition;

				}`,fragmentShader:`#include <packing>
				varying vec4 vPosition;
				varying vec4 projTexCoord;
				uniform sampler2D depthTexture;
				uniform vec2 cameraNearFar;

				void main() {

					float depth = unpackRGBAToDepth(texture2DProj( depthTexture, projTexCoord ));
					float viewZ = - DEPTH_TO_VIEW_Z( depth, cameraNearFar.x, cameraNearFar.y );
					float depthTest = (-vPosition.z > viewZ) ? 1.0 : 0.0;
					gl_FragColor = vec4(0.0, depthTest, 1.0, 1.0);

				}`})}_getEdgeDetectionMaterial(){return new F({uniforms:{maskTexture:{value:null},texSize:{value:new p(.5,.5)},visibleEdgeColor:{value:new T(1,1,1)},hiddenEdgeColor:{value:new T(1,1,1)}},vertexShader:`varying vec2 vUv;

				void main() {
					vUv = uv;
					gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
				}`,fragmentShader:`varying vec2 vUv;

				uniform sampler2D maskTexture;
				uniform vec2 texSize;
				uniform vec3 visibleEdgeColor;
				uniform vec3 hiddenEdgeColor;

				void main() {
					vec2 invSize = 1.0 / texSize;
					vec4 uvOffset = vec4(1.0, 0.0, 0.0, 1.0) * vec4(invSize, invSize);
					vec4 c1 = texture2D( maskTexture, vUv + uvOffset.xy);
					vec4 c2 = texture2D( maskTexture, vUv - uvOffset.xy);
					vec4 c3 = texture2D( maskTexture, vUv + uvOffset.yw);
					vec4 c4 = texture2D( maskTexture, vUv - uvOffset.yw);
					float diff1 = (c1.r - c2.r)*0.5;
					float diff2 = (c3.r - c4.r)*0.5;
					float d = length( vec2(diff1, diff2) );
					float a1 = min(c1.g, c2.g);
					float a2 = min(c3.g, c4.g);
					float visibilityFactor = min(a1, a2);
					vec3 edgeColor = 1.0 - visibilityFactor > 0.001 ? visibleEdgeColor : hiddenEdgeColor;
					gl_FragColor = vec4(edgeColor, 1.0) * vec4(d);
				}`})}_getSeparableBlurMaterial(e){return new F({defines:{MAX_RADIUS:e},uniforms:{colorTexture:{value:null},texSize:{value:new p(.5,.5)},direction:{value:new p(.5,.5)},kernelRadius:{value:1}},vertexShader:`varying vec2 vUv;

				void main() {
					vUv = uv;
					gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
				}`,fragmentShader:`#include <common>
				varying vec2 vUv;
				uniform sampler2D colorTexture;
				uniform vec2 texSize;
				uniform vec2 direction;
				uniform float kernelRadius;

				float gaussianPdf(in float x, in float sigma) {
					return 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;
				}

				void main() {
					vec2 invSize = 1.0 / texSize;
					float sigma = kernelRadius/2.0;
					float weightSum = gaussianPdf(0.0, sigma);
					vec4 diffuseSum = texture2D( colorTexture, vUv) * weightSum;
					vec2 delta = direction * invSize * kernelRadius/float(MAX_RADIUS);
					vec2 uvOffset = delta;
					for( int i = 1; i <= MAX_RADIUS; i ++ ) {
						float x = kernelRadius * float(i) / float(MAX_RADIUS);
						float w = gaussianPdf(x, sigma);
						vec4 sample1 = texture2D( colorTexture, vUv + uvOffset);
						vec4 sample2 = texture2D( colorTexture, vUv - uvOffset);
						diffuseSum += ((sample1 + sample2) * w);
						weightSum += (2.0 * w);
						uvOffset += delta;
					}
					gl_FragColor = diffuseSum/weightSum;
				}`})}_getOverlayMaterial(){return new F({uniforms:{maskTexture:{value:null},edgeTexture1:{value:null},edgeTexture2:{value:null},patternTexture:{value:null},edgeStrength:{value:1},edgeGlow:{value:1},usePatternTexture:{value:0}},vertexShader:`varying vec2 vUv;

				void main() {
					vUv = uv;
					gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
				}`,fragmentShader:`varying vec2 vUv;

				uniform sampler2D maskTexture;
				uniform sampler2D edgeTexture1;
				uniform sampler2D edgeTexture2;
				uniform sampler2D patternTexture;
				uniform float edgeStrength;
				uniform float edgeGlow;
				uniform bool usePatternTexture;

				void main() {
					vec4 edgeValue1 = texture2D(edgeTexture1, vUv);
					vec4 edgeValue2 = texture2D(edgeTexture2, vUv);
					vec4 maskColor = texture2D(maskTexture, vUv);
					vec4 patternColor = texture2D(patternTexture, 6.0 * vUv);
					float visibilityFactor = 1.0 - maskColor.g > 0.0 ? 1.0 : 0.5;
					vec4 edgeValue = edgeValue1 + edgeValue2 * edgeGlow;
					vec4 finalColor = edgeStrength * maskColor.r * edgeValue;
					if(usePatternTexture)
						finalColor += + visibilityFactor * (1.0 - maskColor.r) * (1.0 - patternColor.r);
					gl_FragColor = finalColor;
				}`,blending:Qe,depthTest:!1,depthWrite:!1,transparent:!0})}}W.BlurDirectionX=new p(1,0);W.BlurDirectionY=new p(0,1);const ni="/solar-system-portfolio/images/sun.jpg",li="/solar-system-portfolio/images/8ball.jpg";async function ci(n){console.log("Create the scene");const e=new St;console.log("Create a perspective projection camera");var t=new Ct(45,window.innerWidth/window.innerHeight,.1,1e3);t.position.set(-175,115,5);const i=document.getElementById("threeCanvas"),a=new Pt({canvas:i,alpha:!0,preserveDrawingBuffer:!0});console.log("Create the renderer"),a.setClearColor(0,0),a.setSize(window.innerWidth,window.innerHeight),console.log("Create an orbit control");const s=new It(t,a.domElement);s.enableDamping=!0,s.dampingFactor=.75,s.screenSpacePanning=!1,s.maxDistance=600,console.log("Set up texture loader"),new Et;const l=new Dt,m=new z(window.innerWidth,window.innerHeight,{format:Rt,type:Bt,depthBuffer:!0,stencilBuffer:!1}),f=new ai(a,m);f.addPass(new oi(e,t));const b=new W(new p(window.innerWidth,window.innerHeight),e,t);b.edgeStrength=3,b.edgeGlow=1,b.visibleEdgeColor.set(16777215),b.hiddenEdgeColor.set(1640965),f.addPass(b);const y=new se(new p(window.innerWidth,window.innerHeight),1e-4,.4,.001);y.renderToScreen=!0,y.clear=!1,y.threshold=1,y.radius=.9,f.addPass(y),console.log("Add the ambient light");var Z=new Ot(2236962,6);e.add(Z);const Q=new j(1184274);e.background=Q;const P={accelerationOrbit:1,acceleration:1},q=new At,K=new p;let _e=!1;function Xe(r){if(!we)return;_e=!0,r.preventDefault(),K.x=r.clientX/window.innerWidth*2-1,K.y=-(r.clientY/window.innerHeight)*2+1,q.setFromCamera(K,t);const h=q.intersectObjects(Te),o=document.getElementById("hoverCard");if(h.length>0){const u=h[0].object;o.style.left=`${r.clientX+10}px`,o.style.top=`${r.clientY+10}px`,o.style.display="block",u===x?o.innerText="Contact me":R.meshes.includes(u)?o.innerText="Resume":E.meshes.includes(u)?o.innerText="Skill sets":u===D.planet||u===D.Atmosphere?o.innerText="Robotics":L.meshes.includes(u)?o.innerText="Extracurricular":U.meshes.includes(u)?o.innerText="Childhood":O.meshes.includes(u)?o.innerText="About me":(o.innerText="",o.style.display="none")}else o.style.display="none"}let re=null,ve=!1,oe=new T,we=!0,Y;function Ge(r,h=300){for(let o=X.length-1;o>=0;o--){const u=X[o],d=u===r.planet3d;setTimeout(()=>{if(d){if(r.orbit&&r.orbit.material){let v=function(S){const A=S-w,k=Math.min(A/_,1),C=k*k*(3-2*k);c.opacity=1-C,k<1?requestAnimationFrame(v):r.orbit.visible=!1};const c=r.orbit.material;c.transparent=!0;const _=1e3,w=performance.now();requestAnimationFrame(v)}}else ot(u)},(X.length-1-o)*h)}}function qe(r){return r===x?0:r===R?1:r===E?2:r===D?3:r===L?4:r===U?5:r===O?6:-1}function Re(r,h=1e3){if(!H)return;H.transparent=!0;const o=H.opacity,u=performance.now();function d(c){const _=c-u,w=Math.min(_/h,1),v=w*w*(3-2*w);H.opacity=o+(r-o)*v,w<1&&requestAnimationFrame(d)}requestAnimationFrame(d)}function $e(r){r.preventDefault(),K.x=r.clientX/window.innerWidth*2-1,K.y=-(r.clientY/window.innerHeight)*2+1,q.setFromCamera(K,t);const h=q.intersectObjects(Te);if(h.length>0){const o=h[0].object,u=Je(o);if(u){window.planetIndex=qe(u);const d=new CustomEvent("solarSystemToInfoSection",{detail:{index:window.planetIndex}});window.dispatchEvent(d),P.accelerationOrbit=0;const c=new T;u===x?re=x:(Re(0,1e3),re=u,u.planet.getWorldPosition(c)),window.dispatchEvent(new CustomEvent("circularBorder")),ve=!0,s.target.copy(c),t.lookAt(c),oe.copy(c).add(t.position.clone().sub(c).normalize().multiplyScalar(Y)),Ge(re),setTimeout(()=>{window.dispatchEvent(new CustomEvent("beginPlanetTransform"))},1e3),we=!1,_e=!1,document.getElementById("hoverCard").style.display="none",b.selectedObjects=[]}}}function ne(r,h){let o=r;for(;o;){if(o===h)return!0;o=o.parent}return!1}function Je(r){return R.planet&&ne(r,R.planet)?(Y=V[1],R):r.material===H?(Y=V[0],x):E.planet&&ne(r,E.planet)?(Y=V[2],E):r.material===D.planet.material?(Y=V[3],D):L.planet&&ne(r,L.planet)?(Y=V[4],L):U.planet&&ne(r,U.planet)?(Y=V[5],U):O.planet&&ne(r,O.planet)?(Y=V[6],O):null}let be=!1,Oe=new T(-175,115,5),H;const et=697/40,tt=new pe(et,32,20);H=new ue({emissive:16775311,emissiveMap:l.load(ni),emissiveIntensity:1,color:new j(16753920)}),H.transparent=!0;const x=new ee(tt,H);e.add(x),x.scale.set(1.7,1.7,1.7),x.position.y=-50,x.position.z=0,x.position.x=0;function it(){const r=x.position.y,h=45,o=8e3,u=performance.now();function d(c){const _=c-u,w=Math.min(_/o,1),v=1-Math.pow(1-w,2);x.position.y=r+(h-r)*v,w<1?requestAnimationFrame(d):window.dispatchEvent(new CustomEvent("sunRose"))}requestAnimationFrame(d)}window.solarStartSunrise=it,window.dispatchEvent(new CustomEvent("sunLoaded"));const le=new kt(16646099,1200,400,1.4);x.add(le);const st=new Lt(16777215,2236962,.2);e.add(st);function at(r,h,o,u,d,c,_,w,v){let S;d instanceof zt?S=d:c?S=new ye({map:l.load(d),bumpMap:l.load(c),bumpScale:.7}):S=new ye({map:l.load(d)});const A=r,k=new pe(h,32,20),C=new ee(k,S),xe=new je,$=new Ie;$.add(C);let de,J;C.position.x=o,C.rotation.z=u*Math.PI/180;const ut=new Ne(0,0,o,o,0,2*Math.PI,!1,0).getPoints(100),ct=new Ce().setFromPoints(ut),dt=new Ye({color:16777215,transparent:!0,opacity:.5}),fe=new He(ct,dt);if(fe.rotation.x=Math.PI/2,C.orbit=fe,$.add(fe),_){const I=new Ft(_.innerRadius,_.outerRadius,30),G=new ue({map:l.load(_.texture),side:Ee});J=new ee(I,G),$.add(J),J.position.x=o,J.rotation.x=-.5*Math.PI,J.rotation.y=-u*Math.PI/180}if(w){const I=new pe(h+.1,32,20),G=new ye({map:l.load(w),transparent:!0,opacity:.4,depthTest:!0,depthWrite:!1});de=new ee(I,G),de.rotation.z=.41,C.add(de)}return v&&v.forEach(I=>{let G;I.bump?G=new ue({map:l.load(I.texture),bumpMap:l.load(I.bump),bumpScale:.5}):G=new ue({map:l.load(I.texture)});const ft=new pe(I.size,32,20),Me=new ee(ft,G),pt=h*1.5;Me.position.set(pt,0,0),$.add(Me),I.mesh=Me}),xe.add($),e.add(xe),{name:A,planet:C,planet3d:xe,Atmosphere:de,moons:v,planetSystem:$,Ring:J,orbit:fe}}const R=await he("mercury",40,.2);R.planet.rotation.x=-90*Math.PI/180;const E=await he("venus",65,6.1),D=new at("Earth",6.4,90,0,li,null,null),L=await he("mars",115,4),U=await he("jupiter",170,15),O=await he("saturn",240,1);window.dispatchEvent(new CustomEvent("planetsLoaded"));async function he(r,h,o){const u=await Ut(r);console.log("name: ",r),console.log("planet: ",u),u.traverse(C=>{C.isMesh&&(C.material=new ue({map:C.material.map,color:C.material.color}),C.geometry.computeVertexNormals())});const d=new je,c=new Ie;c.add(u),u.position.x=h,u.scale.set(o,o,o);const w=new Ne(0,0,h,h,0,2*Math.PI,!1,0).getPoints(100),v=new Ce().setFromPoints(w),S=new Ye({color:16777215,transparent:!0,opacity:.5}),A=new He(v,S);A.rotation.x=Math.PI/2,u.orbit=A,c.add(A),d.add(c),e.add(d);let k=[];return u.traverse(C=>{C.isMesh&&k.push(C)}),{name:r,planet:u,planet3d:d,orbit:A,meshes:k}}const Ae=[{name:"Sun",mesh:x},{name:"Mercury",mesh:R.planet},{name:"Venus",mesh:E.planet},{name:"Earth",mesh:D.planet},{name:"Mars",mesh:L.planet},{name:"Jupiter",mesh:U.planet},{name:"Saturn",mesh:O.planet}],V=[70,30,30,25,30,65,70],Te=[x,R.planet,E.planet,D.planet,L.planet,U.planet,O.planet];a.shadowMap.enabled=!0,le.shadow.mapSize.width=1024,le.shadow.mapSize.height=1024,le.shadow.camera.near=10,le.shadow.camera.far=20,D.planet.castShadow=!0,D.planet.receiveShadow=!0,R.planet.castShadow=!0,R.planet.receiveShadow=!0,E.planet.castShadow=!0,E.planet.receiveShadow=!0,L.planet.castShadow=!0,L.planet.receiveShadow=!0,U.planet.castShadow=!0,U.planet.receiveShadow=!0,O.planet.castShadow=!0,O.planet.receiveShadow=!0;const X=[R.planet3d,E.planet3d,D.planet3d,L.planet3d,U.planet3d,O.planet3d];console.log("planets include saturn",X.includes(O.planet3d)),X.forEach((r,h)=>{r.visible=!1});function rt(r){r.visible=!0,r.traverse(h=>{if((h.isMesh||h.isLine)&&h.material){let c=function(_){const w=_-d,v=Math.min(w/u,1),S=v*v*(3-2*v);o.forEach(A=>{A.opacity=S}),v<1&&requestAnimationFrame(c)};h.visible=!0;const o=Array.isArray(h.material)?h.material:[h.material];o.forEach(_=>{_.transparent=!0,_.opacity=0,_.depthWrite===!1&&(_.depthWrite=!0),_.color&&_.color.a!==void 0&&(_.color.a=1)});const u=800,d=performance.now();requestAnimationFrame(c)}})}function ot(r){return new Promise(h=>{r.traverse(o=>{if(o.isMesh||o.isLine){let c=function(_){const w=_-d,v=Math.min(w/u,1),S=1-v*v*(3-2*v);o.material.opacity=S,v<1?requestAnimationFrame(c):(o.visible=!1,h())};o.material.transparent=!0;const u=200,d=performance.now();requestAnimationFrame(c)}})})}function ke(r=1e3){X.forEach((h,o)=>{setTimeout(()=>{rt(h),o===X.length-1&&setTimeout(()=>{window.dispatchEvent(new CustomEvent("planetsInView")),we=!0},r)},o*r)})}function nt(){const r=x.position.y,h=0,o=x.scale.x,u=1,d=2500,c=performance.now();function _(w){const v=w-c,S=Math.min(v/d,1),A=S*S*(3-2*S);x.position.y=r+(h-r)*A;const k=o+(u-o)*A;x.scale.set(k,k,k),S<1?requestAnimationFrame(_):window.dispatchEvent(new CustomEvent("sunZoomComplete"))}requestAnimationFrame(_)}function Le(){if(x.rotateY(.0015),R.planet.rotateZ(.003*P.acceleration),R.planet3d.rotateY(.002*P.accelerationOrbit),E.planet.rotateY(.005*P.acceleration),E.planet3d.rotateY(6e-4*P.accelerationOrbit),D.planet.rotateY(.005*P.acceleration),D.planet3d.rotateY(.001*P.accelerationOrbit),L.planet.rotateY(.008*P.acceleration),L.planet3d.rotateY(.0015*P.accelerationOrbit),U.planet.rotateY(.005*P.acceleration),U.planet3d.rotateY(3e-4*P.accelerationOrbit),O.planet.rotateY(.01*P.acceleration),O.planet3d.rotateY(2e-4*P.accelerationOrbit),_e){q.setFromCamera(K,t);var r=q.intersectObjects(Te);if(b.selectedObjects=[],r.length>0){const h=r[0].object;h===D?b.selectedObjects=[D.planet]:h===E.Atmosphere?b.selectedObjects=[E.planet]:b.selectedObjects=[h]}}ve?(t.position.lerp(oe,.03),t.position.distanceTo(oe)<1&&(ve=!1,re&&(re=null))):be&&(t.position.lerp(Oe,.03),t.position.distanceTo(Oe)<1&&(be=!1)),s.update(),requestAnimationFrame(Le),f.render()}Le(),window.addEventListener("solarTransformDownZoomOutCue",()=>{nt()}),window.addEventListener("firstReveal",()=>{ke(1e3)}),window.addEventListener("zoomOutNeeded",async()=>{be=!0,console.log("zoom out received!"),Re(1,2e3),P.accelerationOrbit=1,setTimeout(()=>{ke(500)},500)});function lt(r){Ae.forEach((h,o)=>{const u=h.mesh;if(!u)return;const d=o===r;u.traverse(c=>{(c.isMesh||c.isLine)&&c.material&&((Array.isArray(c.material)?c.material:[c.material]).forEach(w=>{w.transparent=!0,w.opacity=d?1:0}),c.visible=!0)}),h.orbit&&(h.orbit.visible=d)})}window.addEventListener("planetChange",r=>{const h=r.detail.index,o=Ae[h],u=V[h];lt(h),o.mesh.visible=!0,o.mesh.traverse(c=>{c.visible=!0,c.material&&(c.material.transparent=!0,c.material.opacity=1)});const d=new T;o.mesh.getWorldPosition(d),s.target.copy(d),t.lookAt(d),oe.copy(d).add(t.position.clone().sub(d).normalize().multiplyScalar(u)),t.position.copy(oe),console.log(`Camera updated to: ${o.name}`)}),i.addEventListener("mousemove",Xe,!1),i.addEventListener("click",$e,!1),i.addEventListener("resize",function(){t.aspect=window.innerWidth/window.innerHeight,t.updateProjectionMatrix(),a.setSize(window.innerWidth,window.innerHeight),f.setSize(window.innerWidth,window.innerHeight)});function ht(){const r=document.getElementById("threeCanvas"),h=window.getComputedStyle(r).transform;r.style.transform="none",r.getBoundingClientRect();const o=window.innerWidth,u=window.innerHeight;a.setSize(o,u),t.aspect=o/u,t.updateProjectionMatrix(),r.style.transform=h}window.addEventListener("resize",ht)}export{ci as initSolarSystem};
//# sourceMappingURL=solarSystem-D9zUUExx.js.map
