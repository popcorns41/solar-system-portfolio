{"mappings":"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","sources":["<anon>","src/scripts/browsing.js"],"sourcesContent":["function transformCanvasToHomeButton() {\n    const canvas = document.getElementById(\"threeCanvas\");\n    const card = document.getElementById(\"tutorialCard\");\n    canvas.style.pointerEvents = \"none\";\n    card.style.display = \"none\";\n    // First: scale and round the canvas\n    const scale = 200 / window.innerWidth; // target width is 150px\n    canvas.style.transition = \"transform 7s ease, border-radius 7s ease\";\n    canvas.style.transform = `scale(${scale})`;\n    canvas.style.borderRadius = \"50%\";\n    canvas.style.pointerEvents = \"none\";\n    window.addEventListener(\"beginPlanetTransform\", ()=>{\n        // Total vertical movement (relative to center of original canvas)\n        const translateY = window.innerHeight / 2 - 100;\n        // New transform: scale + move\n        canvas.style.transition = \"transform 4s ease\";\n        canvas.style.transform = `translate(0px, ${translateY}px) scale(${scale})`;\n    });\n}\nfunction transformCanvasToSolarSystem() {\n    const canvas = document.getElementById(\"threeCanvas\");\n    canvas.style.transition = \"transform 4s ease, border-radius 4s ease\";\n    canvas.style.transform = \"translate(0, 0) scale(1)\";\n    canvas.style.borderRadius = \"0%\";\n    canvas.style.width = \"100vw\";\n    canvas.style.height = \"100vh\";\n    canvas.style.pointerEvents = \"auto\";\n    setTimeout(()=>{\n        window.dispatchEvent(new CustomEvent(\"zoomOutNeeded\"));\n    }, 0);\n}\nfunction showPlanetSelector() {\n    const selector = document.getElementById(\"planetSelector\");\n    selector.style.opacity = \"1\";\n    selector.style.pointerEvents = \"auto\";\n}\nfunction updateArrows() {\n    const leftArrow = document.getElementById(\"leftArrow\");\n    const rightArrow = document.getElementById(\"rightArrow\");\n    const index = window.planetIndex;\n    // Reset classes to re-trigger animation if needed\n    leftArrow.classList.remove(\"sweep-left\");\n    rightArrow.classList.remove(\"sweep-right\");\n    // Delay re-adding for animation retriggering\n    setTimeout(()=>{\n        if (index === 0) {\n            // At Saturn (last planet)\n            leftArrow.style.opacity = \"1\";\n            leftArrow.style.pointerEvents = \"auto\";\n            rightArrow.style.opacity = \"0\";\n            rightArrow.style.pointerEvents = \"none\";\n            leftArrow.classList.add(\"sweep-left\");\n        } else if (index === 6) {\n            // At Sun (first planet)\n            leftArrow.style.opacity = \"0\";\n            leftArrow.style.pointerEvents = \"none\";\n            rightArrow.style.opacity = \"1\";\n            rightArrow.style.pointerEvents = \"auto\";\n            rightArrow.classList.add(\"sweep-right\");\n        } else {\n            // Middle planets\n            leftArrow.style.opacity = \"1\";\n            rightArrow.style.opacity = \"1\";\n            leftArrow.style.pointerEvents = \"auto\";\n            rightArrow.style.pointerEvents = \"auto\";\n            leftArrow.classList.add(\"sweep-left\");\n            rightArrow.classList.add(\"sweep-right\");\n        }\n    }, 10); // Small timeout to ensure animation can retrigger\n}\nfunction updateInfoDisplay() {\n    const leftBox = document.getElementById(\"infoBoxLeft\");\n    const rightBox = document.getElementById(\"infoBoxRight\");\n    const infoSection = document.getElementById(\"infoSection\");\n    const index = window.planetIndex;\n    // Always show left box\n    leftBox.style.display = \"block\";\n    leftBox.style.opacity = \"1\";\n    leftBox.style.pointerEvents = \"auto\";\n    if (index === 0) {\n        // Only show left box for index 0 (Sun)\n        rightBox.style.display = \"none\";\n        rightBox.style.opacity = \"0\";\n        rightBox.style.pointerEvents = \"none\";\n    } else {\n        // Show both for other planets\n        rightBox.style.display = \"block\";\n        rightBox.style.opacity = \"1\";\n        rightBox.style.pointerEvents = \"auto\";\n    }\n    // Reveal section (if hidden)\n    infoSection.style.display = \"flex\";\n}\ndocument.getElementById(\"leftArrow\").addEventListener(\"click\", ()=>{\n    if (window.planetIndex < 6) {\n        window.planetIndex++;\n        dispatchPlanetChange();\n        updateInfoDisplay();\n        updateArrows();\n    }\n});\ndocument.getElementById(\"rightArrow\").addEventListener(\"click\", ()=>{\n    if (window.planetIndex > 0) {\n        window.planetIndex--;\n        dispatchPlanetChange();\n        updateInfoDisplay();\n        updateArrows();\n    }\n});\nfunction dispatchPlanetChange() {\n    const planetChangedEvent = new CustomEvent(\"planetChange\", {\n        detail: {\n            index: window.planetIndex\n        }\n    });\n    console.log(\"Arrow Pressed!\");\n    window.dispatchEvent(planetChangedEvent);\n}\nfunction triggerUIReveal() {\n    const ringSvg = document.getElementById(\"planetCenter\");\n    const circle = ringSvg.querySelector(\"circle\");\n    const leftArrow = document.getElementById(\"leftArrow\");\n    const rightArrow = document.getElementById(\"rightArrow\");\n    leftArrow.style.opacity = \"0\";\n    rightArrow.style.opacity = \"0\";\n    leftArrow.style.pointerEvents = \"none\";\n    rightArrow.style.pointerEvents = \"none\";\n    circle.style.strokeDashoffset = \"0\";\n    setTimeout(()=>{\n        updateArrows();\n    }, 1300);\n}\nfunction removeUI() {\n    const planetCenter = document.getElementById(\"planetCenter\");\n    const circle = planetCenter.querySelector(\"circle\");\n    const leftArrow = document.getElementById(\"leftArrow\");\n    const rightArrow = document.getElementById(\"rightArrow\");\n    const selector = document.getElementById(\"planetSelector\");\n    circle.style.strokeDashoffset = \"314\";\n    setTimeout(()=>{\n        selector.style.opacity = \"0\";\n        selector.style.pointerEvents = \"none\";\n        leftArrow.classList.remove(\"sweep-left\");\n        rightArrow.classList.remove(\"sweep-right\");\n    }, 2000);\n}\nfunction revealInfoBoxes() {\n    const leftBox = document.getElementById(\"infoBoxLeft\");\n    const rightBox = document.getElementById(\"infoBoxRight\");\n    // Always reveal the left box\n    leftBox.style.pointerEvents = \"auto\";\n    leftBox.style.opacity = \"1\";\n    leftBox.style.display = \"block\";\n    if (window.planetIndex === 0) {\n        // Hide the right box for the Sun\n        rightBox.style.pointerEvents = \"none\";\n        rightBox.style.opacity = \"0\";\n        rightBox.style.display = \"none\";\n    } else {\n        // Show and enable the right box\n        rightBox.style.pointerEvents = \"auto\";\n        rightBox.style.opacity = \"1\";\n        rightBox.style.display = \"block\";\n    }\n    setTimeout(()=>{\n        uiFinished = true;\n    }, 500);\n}\nfunction hideInfoBoxes() {\n    const leftBox = document.getElementById(\"infoBoxLeft\");\n    const rightBox = document.getElementById(\"infoBoxRight\");\n    leftBox.style.pointerEvents = \"none\";\n    rightBox.style.pointerEvents = \"none\";\n    leftBox.style.transition = \"opacity 2s\";\n    rightBox.style.transition = \"opacity 2s\";\n    leftBox.style.opacity = \"0\";\n    rightBox.style.opacity = \"0\";\n}\nlet uiFinished = false;\nwindow.addEventListener(\"circularBorder\", ()=>{\n    transformCanvasToHomeButton();\n    setTimeout(()=>{\n        showPlanetSelector();\n        triggerUIReveal();\n        setTimeout(()=>{\n            revealInfoBoxes();\n        }, 2000);\n    }, 5000);\n});\ndocument.getElementById(\"planetCenter\").addEventListener(\"click\", ()=>{\n    if (!uiFinished) return;\n    uiFinished = false;\n    hideInfoBoxes();\n    removeUI();\n    setTimeout(()=>{\n        console.log(\"return to solarSystem Pressed\");\n        transformCanvasToSolarSystem();\n    }, 2000);\n});\n\n//# sourceMappingURL=solar-system-portfolio.f1828b47.js.map\n","function transformCanvasToHomeButton() {\n  const canvas = document.getElementById(\"threeCanvas\");\n  const card = document.getElementById(\"tutorialCard\");\n\n  canvas.style.pointerEvents = \"none\";\n\n  card.style.display = \"none\";\n\n  // First: scale and round the canvas\n  const scale = 200 / window.innerWidth; // target width is 150px\n  canvas.style.transition = \"transform 7s ease, border-radius 7s ease\";\n  canvas.style.transform = `scale(${scale})`;\n  canvas.style.borderRadius = \"50%\";\n  canvas.style.pointerEvents = \"none\";\n\n  window.addEventListener(\"beginPlanetTransform\",()=>{\n    // Total vertical movement (relative to center of original canvas)\n    const translateY = window.innerHeight / 2 - 100;\n\n    // New transform: scale + move\n    canvas.style.transition = \"transform 4s ease\";\n    canvas.style.transform = `translate(0px, ${translateY}px) scale(${scale})`;\n  });\n}\n\nfunction transformCanvasToSolarSystem() {\n  const canvas = document.getElementById(\"threeCanvas\");\n\n  canvas.style.transition = \"transform 4s ease, border-radius 4s ease\";\n  canvas.style.transform = \"translate(0, 0) scale(1)\";\n  canvas.style.borderRadius = \"0%\";\n  canvas.style.width = \"100vw\";\n  canvas.style.height = \"100vh\";\n  canvas.style.pointerEvents = \"auto\";\n  setTimeout(()=>{window.dispatchEvent(new CustomEvent(\"zoomOutNeeded\"));},0);\n  \n}\n\n\nfunction showPlanetSelector() {\n  const selector = document.getElementById(\"planetSelector\");\n  selector.style.opacity = \"1\";\n  selector.style.pointerEvents = \"auto\";\n}\n\nfunction updateArrows() {\n  const leftArrow = document.getElementById(\"leftArrow\");\n  const rightArrow = document.getElementById(\"rightArrow\");\n  const index = window.planetIndex;\n\n  // Reset classes to re-trigger animation if needed\n  leftArrow.classList.remove(\"sweep-left\");\n  rightArrow.classList.remove(\"sweep-right\");\n\n  // Delay re-adding for animation retriggering\n  setTimeout(() => {\n    if (index === 0) {\n      // At Saturn (last planet)\n      leftArrow.style.opacity = \"1\";\n      leftArrow.style.pointerEvents = \"auto\";\n      rightArrow.style.opacity = \"0\";\n      rightArrow.style.pointerEvents = \"none\";\n      leftArrow.classList.add(\"sweep-left\");\n\n    } else if (index === 6) {\n      // At Sun (first planet)\n      leftArrow.style.opacity = \"0\";\n      leftArrow.style.pointerEvents = \"none\";\n      rightArrow.style.opacity = \"1\";\n      rightArrow.style.pointerEvents = \"auto\";\n      rightArrow.classList.add(\"sweep-right\");\n\n    } else {\n      // Middle planets\n      leftArrow.style.opacity = \"1\";\n      rightArrow.style.opacity = \"1\";\n      leftArrow.style.pointerEvents = \"auto\";\n      rightArrow.style.pointerEvents = \"auto\";\n      leftArrow.classList.add(\"sweep-left\");\n      rightArrow.classList.add(\"sweep-right\");\n    }\n  }, 10); // Small timeout to ensure animation can retrigger\n}\nfunction updateInfoDisplay() {\n  const leftBox = document.getElementById(\"infoBoxLeft\");\n  const rightBox = document.getElementById(\"infoBoxRight\");\n  const infoSection = document.getElementById(\"infoSection\");\n  const index = window.planetIndex;\n  // Always show left box\n  leftBox.style.display = \"block\";\n  leftBox.style.opacity = \"1\";\n  leftBox.style.pointerEvents = \"auto\";\n\n  if (index === 0) {\n    // Only show left box for index 0 (Sun)\n    rightBox.style.display = \"none\";\n    rightBox.style.opacity = \"0\";\n    rightBox.style.pointerEvents = \"none\";\n  } else {\n    // Show both for other planets\n    rightBox.style.display = \"block\";\n    rightBox.style.opacity = \"1\";\n    rightBox.style.pointerEvents = \"auto\";\n  }\n\n  // Reveal section (if hidden)\n  infoSection.style.display = \"flex\";\n}\n\ndocument.getElementById(\"leftArrow\").addEventListener(\"click\", () => {\n  if (window.planetIndex < 6) {\n    window.planetIndex++;\n    dispatchPlanetChange();\n    updateInfoDisplay();\n    updateArrows();\n  }\n});\n\ndocument.getElementById(\"rightArrow\").addEventListener(\"click\", () => {\n  if (window.planetIndex > 0) { // 6 is Saturn's index\n    window.planetIndex--;\n    dispatchPlanetChange();\n    updateInfoDisplay();\n    updateArrows();\n  }\n});\n\nfunction dispatchPlanetChange() {\n  const planetChangedEvent = new CustomEvent(\"planetChange\", {\n    detail: { index: window.planetIndex }\n  });\n  console.log(\"Arrow Pressed!\")\n  window.dispatchEvent(planetChangedEvent);\n}\n\nfunction triggerUIReveal() {\n  const ringSvg = document.getElementById(\"planetCenter\");\n  const circle = ringSvg.querySelector(\"circle\");\n  const leftArrow = document.getElementById(\"leftArrow\");\n  const rightArrow = document.getElementById(\"rightArrow\");\n\n\n  leftArrow.style.opacity = \"0\";\n  rightArrow.style.opacity = \"0\";\n  leftArrow.style.pointerEvents = \"none\";\n  rightArrow.style.pointerEvents = \"none\";\n\n  \n  circle.style.strokeDashoffset = \"0\";\n\n\n  setTimeout(()=>{\n    updateArrows();\n  },1300);\n}\n\n\n\nfunction removeUI(){\n  const planetCenter = document.getElementById(\"planetCenter\");\n  const circle = planetCenter.querySelector(\"circle\");\n  const leftArrow = document.getElementById(\"leftArrow\");\n  const rightArrow = document.getElementById(\"rightArrow\");\n  const selector = document.getElementById(\"planetSelector\");\n\n  circle.style.strokeDashoffset = \"314\";\n\n  setTimeout(()=>{\n      selector.style.opacity = \"0\";\n      selector.style.pointerEvents = \"none\";\n      leftArrow.classList.remove(\"sweep-left\");\n      rightArrow.classList.remove(\"sweep-right\");\n  },2000);\n}\n\nfunction revealInfoBoxes() {\n  const leftBox = document.getElementById(\"infoBoxLeft\");\n  const rightBox = document.getElementById(\"infoBoxRight\");\n\n  // Always reveal the left box\n  leftBox.style.pointerEvents = \"auto\";\n  leftBox.style.opacity = \"1\";\n  leftBox.style.display = \"block\";\n\n  if (window.planetIndex === 0) {\n    // Hide the right box for the Sun\n    rightBox.style.pointerEvents = \"none\";\n    rightBox.style.opacity = \"0\";\n    rightBox.style.display = \"none\";\n  } else {\n    // Show and enable the right box\n    rightBox.style.pointerEvents = \"auto\";\n    rightBox.style.opacity = \"1\";\n    rightBox.style.display = \"block\";\n  }\n\n  setTimeout(() => {\n    uiFinished = true;\n  }, 500);\n}\n\nfunction hideInfoBoxes(){\n  const leftBox = document.getElementById(\"infoBoxLeft\");\n  const rightBox = document.getElementById(\"infoBoxRight\");\n\n  leftBox.style.pointerEvents = \"none\";\n  rightBox.style.pointerEvents = \"none\";\n\n  leftBox.style.transition = \"opacity 2s\";\n  rightBox.style.transition = \"opacity 2s\";\n\n\n  leftBox.style.opacity = \"0\";\n  rightBox.style.opacity = \"0\";\n}\n\nlet uiFinished = false;\n\nwindow.addEventListener(\"circularBorder\",() => {\n    transformCanvasToHomeButton();\n    setTimeout(()=>{\n      showPlanetSelector();\n      triggerUIReveal();\n      setTimeout(()=>{\n        revealInfoBoxes();\n      },2000);\n      \n    },5000);\n\n});\n\ndocument.getElementById(\"planetCenter\").addEventListener(\"click\",\n  () => {\n    if (!uiFinished) return;\n    uiFinished = false;\n    hideInfoBoxes();\n    removeUI();\n    setTimeout(()=>{\n      console.log(\"return to solarSystem Pressed\")\n      transformCanvasToSolarSystem();\n    },2000);\n  }\n)"],"names":["transformCanvasToHomeButton","canvas","document","getElementById","card","style","pointerEvents","display","scale","window","innerWidth","transition","transform","borderRadius","addEventListener","translateY","innerHeight","transformCanvasToSolarSystem","width","height","setTimeout","dispatchEvent","CustomEvent","showPlanetSelector","selector","opacity","updateArrows","leftArrow","rightArrow","index","planetIndex","classList","remove","add","updateInfoDisplay","leftBox","rightBox","infoSection","dispatchPlanetChange","planetChangedEvent","detail","console","log","triggerUIReveal","circle","ringSvg","querySelector","strokeDashoffset","removeUI","planetCenter","revealInfoBoxes","uiFinished","hideInfoBoxes"],"version":3,"file":"solar-system-portfolio.f1828b47.js.map"}